function A3LMonacoEditor2(n){var i="<div id=\"{{monaco_editor_id}}\" class=\"MonacoEditor\"><script>(function() {\tvar editorFormula;\tvar loaderScriptLoaded = false;\t    /* Cargar el AMD loader necesario para el Monaco Editor */    function loadMonacoLoader(callback) {\t    console.log(\"loaderScriptLoaded \" + loaderScriptLoaded);        if (!loaderScriptLoaded) {            var loaderScript = document.createElement('script');            loaderScript.src = 'vs/loader.js';            loaderScript.onload = function() {                loaderScriptLoaded = true;                callback();            };            document.body.appendChild(loaderScript);        } else {            callback();        }    }\tfunction iniMonacoEditor(crear, url_sug_QS){\t\t\tconsole.log(\"setmonacoeditor 3\");\t\t\t\tif(crear === true){\t\t\t\tmonaco.editor.getModels().forEach(model => model.dispose());\t\t\t}\t\t\t\t\t\tmonaco.languages.register({id: '{{{nombreLenguaje}}}' });\t\t\tconfig = {{{monaco_brackets}}};\t\t\tmonaco.languages.setLanguageConfiguration(\"{{{nombreLenguaje}}}\", config);\t   \t\t\tmonaco.languages.setMonarchTokensProvider('{{{nombreLenguaje}}}', {\t\t\ttokenizer: {root: [{{{monaco_tokens}}}]}});       \t\t\tmonaco.editor.defineTheme('monacoTemplate', {\t\t\t\tbase: 'vs',\t\t\t\tinherit: false,\t\t\t\trules: [{{{monaco_tokens_style}}}],\t\t\t\tcolors: {'editor.foreground': '{{{monaco_foreground}}}'}\t\t\t});\t\t\t\t\t\tif(typeof this.completionItemProvider != \"undefined\"){\t\t\t\tthis.completionItemProvider.dispose();\t\t\t\t\t\t\tthis.hoverProvider.dispose();\t\t\t}\t\t\t\t/*else{*/\t\t\t\t\t\tfetch('{{{monaco_url_sug}}}' + url_sug_QS, {\t\t\t\t}).then(response => {\t\t\t\t\t\t\treturn response.json();\t\t\t}).then(objSug => {\t\t\t\t\t\t\tvar element = document.getElementById('{{monaco_editor_id}}');\t\t\t\tvar columnaHasta = 0;\t\t\t\tvar columnaDesde = 0;\t\t\t\tvar suggestionsArray = new Array();\t\t\t\tvar item = {};\t\t\t\tvar hoverMap = new Map([[]]);\t\t\t\t\t\t\t\t\tvar fetchedSug = objSug;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*lo paso aca. Si lo paso acá, funciona siempre el hover, pero funciona el suggest la primera vez solamente*/\t\t\t\tsuggestionsArray = new Array();\t\t\t\thoverMap = new Map([[]]);\t\t\t\tvar obj;\t\t\t\tfor (var i = 0; i < fetchedSug.length; i++){\t\t\t\t\tobj = fetchedSug[i];\t\t\t\t\t\t/*hoverMap.set(obj.insertText.toUpperCase(), obj.hover_value); cambio por label*/\t\t\t\t\thoverMap.set(obj.label2.toUpperCase(), obj.hover_value);\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t/*fin*/\t\t\t\t\t\t\t\t\t\tthis.completionItemProvider = monaco.languages.registerCompletionItemProvider('{{{nombreLenguaje}}}', {\t\t\t\t\t\t\tprovideCompletionItems: (model, position) => {\t\t\t\t\t\t\tconsole.log(\" funcion provideCompletionItems position.lineNumber \" + position.lineNumber + \" position.column \" + position.column);\t\t\t\t\t\tcontexto = getOperando(model,position.lineNumber, position.column, 'palabra', 0);\t\t\t\t\t\tconsole.log(\"contexto de getOperando \" + contexto)\t\t\t\t\t\t/* nomas\t\t\t\t\t\tif(!contexto || contexto === '' || contexto === 'Error'){\t\t\t\t\t\t\tcontexto = itemContent;\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t*/\t\t\t\t\t\tconsole.log(\" funcion provideCompletionItems... contexto \" + contexto);\t\t\t\t\t\t/*estaba aca. Si lo dejo acá, funciona siempre el suggest, pero el hover solo funciona si primero hago un suggest*/\t\t\t\t\t\tsuggestionsArray = new Array(); /*ojo que descomento esta linea que es problematica como lo explica el renglon anterior*/\t\t\t\t\t\tsuggestionsParametrosArray = new Array();\t\t\t\t\t\titem = {};\t\t\t\t\t\t\t\t\t\t\t\ttieneParametros = false;\t\t\t\t\t\texisteContexto = false;\t\t\t\t\t\tfor (var i = 0; i < fetchedSug.length; i++){\t\t\t\t\t\t\tobj = fetchedSug[i];\t\t\t\t\t\t\t/*console.log('obj ' + JSON.stringify(obj));*/\t\t\t\t\t\t\t\t\t\t\t\t\t\tif( '{' + obj.label.label.toUpperCase() + '}' === contexto){\t\t\t\t\t\t\t\texisteContexto = true;\t\t\t\t\t\t\t}\t\t\t\t\t\t\tif(obj.parametros && obj.parametros.length > 0){\t\t\t\t\t\t\t\t/*console.log('encuentra parametros en ' + obj.label.label + ' obj.label.label.toUpperCase() ' + obj.label.label.toUpperCase() + ' contexto ' + contexto);*/\t\t\t\t\t\t\t\tif( '{' + obj.label.label.toUpperCase() + '}' === contexto){\t\t\t\t\t\t\t\t\ttieneParametros = true;\t\t\t\t\t\t\t\t\tconsole.log('entra ' + obj.parametros.length);\t\t\t\t\t\t\t\t\tfor(p = 0; p < obj.parametros.length;p++){\t\t\t\t\t\t\t\t\t\tconsole.log('p ' + p);\t\t\t\t\t\t\t\t\t\tobjParm = obj.parametros[p];\t\t\t\t\t\t\t\t\t\t/*console.log('objParm ' + JSON.stringify(objParm) );*/\t\t\t\t\t\t\t\t\t\titem = {};\t\t\t\t\t\t\t\t\t\titem.sortText = objParm.sortText;\t\t\t\t\t\t\t\t\t\titem.kind = objParm.kind;\t\t\t\t\t\t\t\t\t\t/*item.label = ' ' + objParm.label + ' ';*/\t\t\t\t\t\t\t\t\t\titem.label = objParm.label;\t\t\t\t\t\t\t\t\t\titem.insertText = objParm.insertText;\t\t\t\t\t\t\t\t\t\titem.insertTextRules = objParm.insertTextRules;\t\t\t\t\t\t\t\t\t\t/*item.detail = objParm.detail;*/\t\t\t\t\t\t\t\t\t\titem.documentation = objParm.documentation;\t\t\t\t\t\t\t\t\t\tsuggestionsParametrosArray.push(item);\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t}\t\t\t\t\t\t\tif(suggestionsParametrosArray.length === 0){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titem = {};\t\t\t\t\t\t\t\titem.sortText = obj.sortText;\t\t\t\t\t\t\t\titem.kind = obj.kind;\t\t\t\t\t\t\t\titem.label = obj.label;\t\t\t\t\t\t\t\titem.insertText = obj.insertText;\t\t\t\t\t\t\t\titem.insertTextRules = obj.insertTextRules;\t\t\t\t\t\t\t\t/*item.detail = obj.detail;*/\t\t\t\t\t\t\t\titem.documentation = obj.documentation;\t\t\t\t\t\t\t\tif(obj.parametros && obj.parametros.length > 0){\t\t\t\t\t\t\t\t\titem.command = {\t\t\t\t\t\t\t\t\t\tid: 'editor.action.triggerSuggest',\t\t\t\t\t\t\t\t\t\ttitle: '123'\t\t\t\t\t\t\t\t\t};\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t/*console.log(\"item ---> \" + JSON.stringify(item));*/\t\t\t\t\t\t\t\tsuggestionsArray.push(item);\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t/*fin*/\t\t\t\t\t\tconsole.log(\"devuelve \" + suggestionsArray.length + \" sugerencias y tantas sugsparm: \" + suggestionsParametrosArray.length + \" tieneParametros \" + tieneParametros );\t\t\t\t\t\t/*console.log(JSON.stringify(suggestionsArray));*/\t\t\t\t\t\tif(suggestionsParametrosArray.length > 0){\t\t\t\t\t\t\tconsole.log(\"devuelve PARAMETROS \" + JSON.stringify(suggestionsParametrosArray));\t\t\t\t\t\t\treturn {\t\t\t\t\t\t\t\tsuggestions: suggestionsParametrosArray\t\t\t\t\t\t\t};\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\telse{\t\t\t\t\t\t\tif(tieneParametros === false && existeContexto === true){\t\t\t\t\t\t\t\treturn {suggestions:[]};\t\t\t\t\t\t\t}\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\treturn {\t\t\t\t\t\t\t\t\tsuggestions: suggestionsArray\t\t\t\t\t\t\t\t};\t\t\t\t\t\t\t}\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t},\t\t\t\t\ttriggerCharacters: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\t\t\t\t}\t\t\t\t);\t\t\t\t\t\t\t\tthis.hoverProvider = monaco.languages.registerHoverProvider('{{{nombreLenguaje}}}', {\t\t\t\t\tprovideHover: function(model, position) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (model.getWordAtPosition(position)) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*itemContent = ''; nomas*/\t\t\t\t\t\t\thoverValue = getOperando(model,position.lineNumber, position.column, 'sugerencia', 0);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn {\t\t\t\t\t\t\t\trange: new monaco.Range(position.lineNumber, position.column, position.lineNumber, position.column),\t\t\t\t\t\t\t\tcontents: [{\t\t\t\t\t\t\t\t\tvalue: hoverValue\t\t\t\t\t\t\t\t}]\t\t\t\t\t\t\t};\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t});\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(crear === true){\t\t\t\t\t\t\t\t\teditorFormula = monaco.editor.create(document.getElementById('{{monaco_editor_id}}'), {\t\t\t\t\t\tvalue: '{{{valorInicial}}}',\t\t\t\t\t\tlanguage: '{{{nombreLenguaje}}}',\t\t\t\t\t\tsuggest: {\t\t\t\t\t\t\tsnippetsPreventQuickSuggestions: false\t\t\t\t\t\t},\t\t\t\t\t\tlineNumbers: '{{{monaco_lineNumbers}}}',\t\t\t\t\t\twordWrap: '{{{monaco_wordWrap}}}',\t\t\t\t\t\twordWrapColumn: {{{monaco_Columns}}},\t\t\t\t\t\ttheme: 'monacoTemplate',\t\t\t\t\t\treadonly: {{{monaco_readOnly}}},\t\t\t\t\t\tminimap: {\t\t\t\t\t\t\tenabled: {{{monaco_miniMap}}}\t\t\t\t\t\t},\t\t\t\t\t\twordBasedSuggestions: false,\t\t\t\t\t\ttabCompletion: 'onlySnippets',\t\t\t\t\t\tselectionHighlight: true\t\t\t\t\t});\t\t\t\t}\t\t\t\t/*codigo markers*/\t\t\t\tvar model=monaco.editor.getModels()[0];\t\t\t\t\t\t\t\t\t\t\tvalidar(model, 'INI', 1, 1);\t\t\t\t\t\t\tmodel.onDidChangeContent((e) => {\t\t\t\t\t\t\t\t\t\tActualizarVariable();\t\t\t\t\t\t\t\t\tvalidar(model, 'CHANGE', 1, 1);\t\t\t\t});\t\t\t\t\t\t\t\t\t\t/*setTimeout(function(){\t\t\t\t\telement.addEventListener('DOMSubtreeModified', ActualizarVariable);\t\t\t\t\t\t\t\t\t}, 2000);\t\t\t\t\t\t*/\t\t\t\tfunction ActualizarVariable(e) {\t\t\t\t\tgx.dom.byId(\"{{{variable_asociada}}}\")[\"value\"] = editorFormula.getValue();\t\t\t\t}\t\t\t\tfunction validar(model, evento, eLine, eColumn){\t\t\t\t\t/*esto dispara la carga de las sugerencias? No*/\t\t\t\t\t\t\t\t\t\tconst markers = [];\t\t\t\t\t\t\t\t\t\tif(evento === 'INI'){\t\t\t\t\t\ttotalLineas = model.getLineCount();\t\t\t\t\t}\t\t\t\t\telse{\t\t\t\t\t\ttotalLineas = eLine;\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let i = eLine; i < totalLineas + 1; i++) { /*línea por línea*/\t\t\t\t\t\t\t\t\t\t\t\tconst range = {\t\t\t\t\t\t\tstartLineNumber: i,\t\t\t\t\t\t\tstartColumn: 1,\t\t\t\t\t\t\tendLineNumber: i,\t\t\t\t\t\t\tendColumn: model.getLineLength(i) + 1\t\t\t\t\t\t};\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"validar 1 eColumn \" + eColumn);\t\t\t\t\t\tfor (let e = eColumn; e < model.getLineLength(i) + 1; e++) { /*caracter por caracer adentro de la línea*/\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"validar 2 i \" + i + \" e \" + e + \" columnaHasta \" + columnaHasta + \" columnaDesde \" + columnaDesde + \"  model.getLineLength(i) \" +  model.getLineLength(i) );\t\t\t\t\t\t\t\tcolumnaHasta = 0;\t\t\t\t\t\t\t\tchunk = getOperando(model, i, e, 'sugerencia', model.getLineLength(i)); /*llama a funcion que extrae palabra en esa columna*/\t\t\t\t\t\t\t\terrorDesde = columnaDesde;\t\t\t\t\t\t\t\tconsole.log(\"validar 2 chunk \" + chunk + ' i ' + i + \" e \" + e + \" columnaHasta \" + columnaHasta + \" columnaDesde \" + columnaDesde + ' errorDesde ' + errorDesde);\t\t\t\t\t\t\t\tif( chunk === 'Error' && e != columnaHasta){\t\t\t\t\t\t\t\t\tconsole.log(\"push!\");\t\t\t\t\t\t\t\t\tmarkers.push({\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Item no reconocido i ' + i + ' e ' + e + ' columnaHasta ' + columnaHasta,\t\t\t\t\t\t\t\t\t\tseverity: monaco.MarkerSeverity.Error,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartLineNumber: i,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/*startColumn: e,*/\t\t\t\t\t\t\t\t\t\tstartColumn: errorDesde,\t\t\t\t\t\t\t\t\t\tendLineNumber: i,\t\t\t\t\t\t\t\t\t\t/*endColumn: range.endColumn*/\t\t\t\t\t\t\t\t\t\tendColumn: columnaHasta\t\t\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t/*\t\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\t\tif(evento !== 'INI' && evento !== 'CHANGE){\t\t\t\t\t\t\t\t\t\tconsole.log('chau por ' + evento);\t\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}*/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te = columnaHasta + 1;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('chunk ' + chunk + ' columna hasta ' + columnaHasta + 'e ' + e + ' ' + ' length ' + model.getLineLength(i) );\t\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t\tmonaco.editor.setModelMarkers(model, 'owner', markers);\t\t\t\t\t/*end markers*/\t\t\t\t}\t\t\t\t\t\t\t\tfunction getOperando(model,nroLin,columna, devolver, finLinea ){\t\t\t\t\t\t\t\t\t\t\t\tcolumnaDesde = columna;\t\t\t\t\t\t\t\t\t\t\t\tpos_ant = new Object();\t\t\t\t\t\t\t\t\t\t\tpos_ant.lineNumber = nroLin;\t\t\t\t\t\tpos_ant.column = columnaDesde;\t\t\t\t\t\tconsole.log('ini ' + model.getWordAtPosition(pos_ant) + \" columnaDesde \" + columnaDesde + \" devolver \" + devolver)  ;\t\t\t\t\t\tfinInicial = 0;\t\t\t\t\t\tif(model.getWordAtPosition(pos_ant)){\t\t\t\t\t\t\tconsole.log(\"iniii \" + model.getWordAtPosition(pos_ant).word);\t\t\t\t\t\t\tfinInicial = model.getWordAtPosition(pos_ant).endColumn;\t\t\t\t\t\t}\t\t\t\t\t\tauxCol = columnaDesde - 1;\t\t\t\t\t\tif(auxCol > 0){\t\t\t\t\t\t\tletra = model.getValueInRange({startLineNumber:nroLin,startColumn:auxCol,endLineNumber:nroLin,endColumn:auxCol + 1});\t\t\t\t\t\t}\t\t\t\t\t\telse{\t\t\t\t\t\t\tletra = '';\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"leeetra \" + letra + \" columnaDesde \" + columnaDesde + \" auxCol \" + auxCol + \" finInicial \" + finInicial);\t\t\t\t\t\t/*while (columnaDesde >= 1 && (model.getWordAtPosition(pos_ant) || letra === ' ')) {*/ /*Resta posicion hasta que encuentra una letra distinta  a ' '*/\t\t\t\t\t\t\t\t\t\t\t\tif(!model.getWordAtPosition(pos_ant)){\t\t\t\t\t\t\tcolumnaDesde--;\t\t\t\t\t\t\tpos_ant.lineNumber = nroLin;\t\t\t\t\t\t\tpos_ant.column = columnaDesde;\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"restaaa columnadesde (\" + model.getWordAtPosition(pos_ant) + \")\");\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\tcolumnaHasta = columna;\t\t\t\t\t\tconsole.log(\"letra \" + letra + \" auxCol \" + auxCol + \" columnaDesde \" + columnaDesde + \" columnaHasta \" + columnaHasta);\t\t\t\t\t\t\t\t\t\t\t\tloop = 1;\t\t\t\t\t\t\t\t\t\t\t\t/*while (auxCol >= 1 && ( letra === ' ')) { */\t\t\t\t\t\tencontroUnAbre = false;\t\t\t\t\t\tif(letra === '{' || letra === '['){\t\t\t\t\t\t\tcolumnaDesde--;\t\t\t\t\t\t}\t\t\t\t\t\thayAlgunaPalabra = false;\t\t\t\t\t\twhile (auxCol >= 1 && letra !== '{' && letra !== '[' && letra !== '}' && letra !== ']' ) { \t\t\t\t\t\t\tcolumnaDesde--; /*Con esto voy a lograr que reconozca la palabra del calculo por ejemplo {retroactivo ...}*/\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tletra = model.getValueInRange({startLineNumber:nroLin,startColumn:auxCol,endLineNumber:nroLin,endColumn:auxCol + 1});\t\t\t\t\t\t\t\t\t\t\t\t\t\tif(letra === '[' || letra === '{'){\t\t\t\t\t\t\t\tencontroUnAbre = true;\t\t\t\t\t\t\t}\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\tif(letra !== '}' && letra !== ']'){\t\t\t\t\t\t\t\t\tif(hayAlgunaPalabra === false){\t\t\t\t\t\t\t\t\t\tif( model.getWordAtPosition({lineNumber:nroLin,column:auxCol})){\t\t\t\t\t\t\t\t\t\t\tconst number = Number(model.getWordAtPosition({lineNumber:nroLin,column:auxCol}).word);\t\t\t\t\t\t\t\t\t\t\tif(Number.isNaN(number)) {\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('hay esta palabra ' + model.getWordAtPosition({lineNumber:nroLin,column:auxCol}).word);\t\t\t\t\t\t\t\t\t\t\t\thayAlgunaPalabra = true;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('es numero: ' + model.getWordAtPosition({lineNumber:nroLin,column:auxCol}).word);\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tauxCol--;\t\t\t\t\t\t\tconsole.log(\"letrita \" + letra + \" auxCol \" + auxCol);\t\t\t\t\t\t\tloop++;\t\t\t\t\t\t\tif(loop === 1000){\t\t\t\t\t\t\t\tconsole.log('LOOP 1');\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t}\t\t\t\t\t\t}\t\t\t\t\t\tif(letra === '}' || letra === ']'){\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnaHasta++;\t\t\t\t\t\t\tconsole.log('encontró cierre, se vaaaa con error encontroUnAbre ' + encontroUnAbre + ' hayAlgunaPalabra ' + hayAlgunaPalabra);\t\t\t\t\t\t\tif(encontroUnAbre === false && hayAlgunaPalabra === true){\t\t\t\t\t\t\t\treturn \"Error\";\t\t\t\t\t\t\t}\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\treturn '';\t\t\t\t\t\t\t}\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t/*\t\t\t\t\t\tpos_ant.column = columnaDesde;\t\t\t\t\t\t\tconsole.log(\"a verrr \" + model.getWordAtPosition(pos_ant));\t\t\t\t\t\tloop = 1;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twhile (model.getWordAtPosition(pos_ant) && columnaDesde <= 1) { \t\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnaDesde--;\t\t\t\t\t\t\t\t\t\t\t\t\tpos_ant.lineNumber = nroLin;\t\t\t\t\t\t\tpos_ant.column = columnaDesde;\t\t\t\t\t\t\tconsole.log('resta ' + model.getWordAtPosition(pos_ant));\t\t\t\t\t\t\tloop++;\t\t\t\t\t\t\tif(loop === 1000){\t\t\t\t\t\t\t\tconsole.log('LOOP 2');\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t*/\t\t\t\t\t\t\t\t\t\t\t\tpos_post = new Object();\t\t\t\t\t\t\t\t\t\t\tpos_post.lineNumber = nroLin;\t\t\t\t\t\tpos_post.column = columnaHasta;\t\t\t\t\t\tlet parametro = ''\t\t\t\t\t\tconsole.log('nrolin ' + nroLin + ' columnaHasta ' + columnaHasta + ' columnaDesde ' + columnaDesde + ' letra ' + letra);\t\t\t\t\t\tcolumnaFin = 0;\t\t\t\t\t\tif(letra === ' '){\t\t\t\t\t\t\t/*parametro = ' ';*/\t\t\t\t\t\t\tcolumnaFin = columnaHasta + 1;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\telse{\t\t\t\t\t\t\t\t\t\t\t\t\t\tpos_ant.column = columnaDesde + 2;\t\t\t\t\t\t\tconsole.log(\"loop \" + model.getWordAtPosition(pos_ant) + ' columnaDesde ' + columnaDesde);\t\t\t\t\t\t\tif(model.getWordAtPosition(pos_ant)){\t\t\t\t\t\t\t\tconsole.log(\"word \" + model.getWordAtPosition(pos_ant).word);\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\tif(model.getWordAtPosition(pos_ant) ){\t\t\t\t\t\t\t\t/*parametro = model.getWordAtPosition(pos_ant).word.toUpperCase();*/\t\t\t\t\t\t\t\tcolumnaFin = model.getWordAtPosition(pos_ant).endColumn;\t\t\t\t\t\t\t}\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\tconsole.log(\"errrrror!\");\t\t\t\t\t\t\t\tcolumnaHasta++;\t\t\t\t\t\t\t\treturn 'Error';\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"conseguir columnahasta \" + JSON.stringify(model.getWordAtPosition(pos_post)) + \" columnaHasta \" + columnaHasta + ' parametro ' + parametro);\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"columnaFin \" + columnaFin + \" parametro \" + parametro);\t\t\t\t\t\tif(columnaFin > columnaHasta){\t\t\t\t\t\t\tcolumnaHasta = columnaFin;\t\t\t\t\t\t}\t\t\t\t\t\t/*\t\t\t\t\t\twhile (model.getWordAtPosition(pos_post)) {\t\t\t\t\t\t\tconsole.log(\"while conseguir columnahasta \" + JSON.stringify(model.getWordAtPosition(pos_post)) + \" columnaHasta \"  + columnaHasta + \" columnaFin \" + columnaFin);\t\t\t\t\t\t\tif (model.getWordAtPosition(pos_post).endColumn === columnaFin){\t\t\t\t\t\t\t\tconsole.log(\"break\");\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t}\t\t\t\t\t\t\tcolumnaHasta++;\t\t\t\t\t\t\t\t\t\t\t\t\tpos_post.lineNumber = nroLin;\t\t\t\t\t\t\tpos_post.column = columnaHasta;\t\t\t\t\t\t}\t\t\t\t\t\t*/\t\t\t\t\t\tcolumnaHastaContent = columnaFin;\t\t\t\t\t\tcolumnaHasta++;\t\t\t\t\t\t\t\t\t\t\t\titemContent = model.getValueInRange({\t\t\t\t\t\t\t\t\t\t\t\t\tstartLineNumber: nroLin,\t\t\t\t\t\t\tstartColumn: columnaDesde,\t\t\t\t\t\t\t\t\t\t\t\t\tendLineNumber: nroLin,\t\t\t\t\t\t\tendColumn: columnaHastaContent,\t\t\t\t\t\t});\t\t\t\t\t\titemContent = itemContent.toUpperCase().trim();\t\t\t\t\t\t\tconsole.log(\"getsug 1 itemContent \" + itemContent);\t\t\t\t\t\t\t\t\t\t\t\tlet ultimoCaracter = itemContent.substr(itemContent.length - 1, 1);\t\t\t\t\t\tlet primerCaracter = itemContent.substr(0, 1);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"ultimo caracter \" + ultimoCaracter + \" primerCaracter \" + primerCaracter);\t\t\t\t\t\t\t\t\t\t\t\tif ((ultimoCaracter !== \"]\" && primerCaracter === \"[\") || (ultimoCaracter !== \"}\" && primerCaracter === \"{\")) {\t\t\t\t\t\t\tconsole.log(\"getsug 2\");\t\t\t\t\t\t\tif(itemContent.substr(0, 1) === \"[\"){\t\t\t\t\t\t\t\titemContent += \"]\";\t\t\t\t\t\t\t\tif(finInicial > 0){\t\t\t\t\t\t\t\t\tcolumnaHasta = finInicial;\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\tconsole.log(\"getsug 3 \" + columnaHasta);\t\t\t\t\t\t\t}\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\titemContent += \"}\";\t\t\t\t\t\t\t\tif(finInicial > 0){\t\t\t\t\t\t\t\t\tcolumnaHasta = finInicial;\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\tconsole.log(\"getsug 4 \" + columnaHasta);\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"getsug itemContent \" + itemContent);\t\t\t\t\t\t\t\t\t\t\t\tlet permitidos = {{{permitidos}}};\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemContentAux = itemContent;\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0; i < permitidos.length; i++){\t\t\t\t\t\t\titemContentAux = itemContentAux.replaceAll(permitidos[i], '');\t\t\t\t\t\t\t/*console.log('reemplaza ' + permitidos[i]);*/\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t/*Si la palabra está adentro del cálculo, que arme el valor {CALCULO}*/\t\t\t\t\t\t/*\t\t\t\t\t\tconsole.log('parametro ' + parametro + ' itemContentAux ' + itemContentAux);\t\t\t\t\t\tif(itemContentAux.indexOf(\"{\") !== -1 && (itemContentAux.indexOf(' ' + parametro) !== -1 || itemContentAux.indexOf(' }') !== -1 ) ){\t\t\t\t\t\t\tlet itemContentAux2 = \"\";\t\t\t\t\t\t\tfor(i=0;i < itemContentAux.length;i++){\t\t\t\t\t\t\t\tif(itemContentAux.substr(i,1) === \" \"){\t\t\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemContentAux2 += itemContentAux.substr(i,1);\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\titemContentAux = itemContentAux2;\t\t\t\t\t\t\tconsole.log(\"asdf itemContentAux \" + itemContentAux);\t\t\t\t\t\t\tif(itemContentAux.indexOf('{') != -1){\t\t\t\t\t\t\t\titemContentAux += '}'\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"asdf 2 itemContentAux \" + itemContentAux);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t*/\t\t\t\t\t\titemContent = itemContentAux;\t\t\t\t\t\t\t\t\t\t\t\tpos_post.column = columnaHasta;\t\t\t\t\t\tconsole.log(\"busca hasta \" + model.getWordAtPosition(pos_post));\t\t\t\t\t\twhile (!model.getWordAtPosition(pos_post) && columnaHasta < finLinea) {\t\t\t\t\t\t\tcolumnaHasta++;\t\t\t\t\t\t\t\t\t\t\t\t\tpos_post.column = columnaHasta;\t\t\t\t\t\t\tconsole.log(\"sigue \" + model.getWordAtPosition(pos_post) + \" con \" + columnaHasta); \t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"fin columnaHasta \" + columnaHasta + 'columnaDesde ' + columnaDesde);\t\t\t\t\t\t\t\t\t\t\t\t\tif(devolver == 'palabra'){\t\t\t\t\t\t\treturn itemContent;\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\tconst number = Number(itemContentAux);\t\t\t\t\t\tconst number2 = Number(itemContentAux);\t\t\t\t\t\tconsole.log('itemContentAux ' + itemContentAux);\t\t\t\t\t\tconsole.log('itemContent ' + itemContent);\t\t\t\t\t\tconsole.log('parametro ' + parametro);\t\t\t\t\t\t/*acá empieza a validar*/\t\t\t\t\t\tif(!Number.isNaN(number) || itemContentAux === '' || itemContentAux === '/'  || !Number.isNaN(number) ){\t\t\t\t\t\t\tconsole.log('es vacio, barra, o número');\t\t\t\t\t\t\t/*sug = '';*/\t\t\t\t\t\t\treturn '';\t\t\t\t\t\t}\t\t\t\t\t\telse{\t\t\t\t\t\t\t/*\t\t\t\t\t\t\tpalabraConcepto = '{{palabra_concepto}}';\t\t\t\t\t\t\tif (itemContent.indexOf('{' + palabraConcepto + ' ') != -1) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('jsMonacoEditorHoverPopups Es Concepto! ' + itemContent);\t\t\t\t\t\t\t\t\t\telementos = itemContent.split(' ');\t\t\t\t\t\t\t\tif(elementos.length > 2 || itemContent.indexOf(' {{{totalPalabra}}}]') != -1 ){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\titemContent = elementos[0] + ' ' + elementos[1] + '}';\t\t\t\t\t\t\t\t\tconsole.log('itemcontent acortado ' + itemContent);\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\tif (hoverMap.get(itemContent)) {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsug = hoverMap.get(itemContent);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tultimaLetraConcepto = itemContent.substr(17, 1);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('ultima letra ' + ultimaLetraConcepto);\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \t\t\t\t\t\t\t\telse {\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsug = 'Error';\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t} \t\t\t\t\t\t\telse {*/\t\t\t\t\t\t\t\tconsole.log('asdf itemContent ' + itemContent);\t\t\t\t\t\t\t\tconst hoverMapContent = hoverMap.get(itemContent);\t\t\t\t\t\t\t\tconsole.log('hoverMapContent ' + hoverMapContent);\t\t\t\t\t\t\t\tif (hoverMapContent) {\t\t\t\t\t\t\t\t\tsug = hoverMapContent;\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\telse{\t\t\t\t\t\t\t\t\tsug = 'Error';\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\treturn sug;\t\t\t\t\t\t\t\tconsole.log('sug ' + sug);\t\t\t\t\t\t\t/*}*/\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t}\t\t\t\teditorFormula.updateOptions({\t\t\t\t\treadOnly: {{{monaco_readOnly}}},\t\t\t\t\trenderValidationDecorations: \"on\"\t\t\t\t});\t\t\t\teditorFormula.onMouseDown(function (e) {\t\t\t\t\tconsole.log('mouse down!! ' + JSON.stringify(e));\t\t\t\t\t\t\t\t\t\t\t\t\tif(!model.getWordAtPosition( e.target.position)){ /*Esto lo pongo para que cuando hagan click afuera de un cálculo, donde no hay ninguna palabra, se reseteen las sugerencias*/\t\t\t\t\t\t/*itemContent = ''; nomas ..si esto funciona sacar todo el listener*/\t\t\t\t\t}\t\t\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\t\t});\t\t\t\t}\tfunction setMonacoEditor(crear, url_sug_QS) {\t\t\tconsole.log(\"setmonacoeditor 1\");\t\t\t\trequire.config({paths: {vs: 'vs'}});\t\tconsole.log(\"setmonacoeditor 2\");\t\t\tif (window.monaco && window.monaco.editor && window.monaco.editor.create) {\t\t\tiniMonacoEditor(crear, url_sug_QS);\t\t}\t\telse{\t\t\trequire(['vs/editor/editor.main'], function() {\t\t\t\t\t\t\tiniMonacoEditor(crear, url_sug_QS);\t\t\t\t\t\t\t\t\t\t});\t\t\t}\t}     /* Función para descartar el AMD loader */    function discardMonacoLoader() {        \t           delete window.require;        delete window.define;\t           var scripts = document.querySelectorAll('script[src=\"vs/loader.js\"]');        for (var i = 0; i < scripts.length; i++) {            scripts[i].parentNode.removeChild(scripts[i]);        }    }\tfunction verificarRequireYSetMonacoEditor() {\t\tconsole.log(\"verificarRequireYSetMonacoEditor\");\tif (typeof require !== 'undefined') {        setMonacoEditor(true, '{{{url_sug_QueryString}}}');        /* Luego de que hayas terminado de usar el editor */       /* discardMonacoLoader();\t\t*/\t\t} else {        \t\tsetTimeout(verificarRequireYSetMonacoEditor, 500);\t}\t}    /* Uso de las funciones */    loadMonacoLoader(function() {\t    \t   verificarRequireYSetMonacoEditor();     });})();<\/script>",r,t;Mustache.parse(i);this.show=function(){r=n(this.getContainerControl());this.setHtml(Mustache.render(i,this));this.renderChildContainers()};this.Scripts=[];this.autoToggleVisibility=!0;t={};this.renderChildContainers=function(){r.find("[data-slot][data-parent='"+this.ContainerName+"']").each(function(i,r){var e=n(r),f=e.attr("data-slot"),u;u=t[f];u||(u=this.getChildContainer(f),t[f]=u,u.parentNode.removeChild(u));e.append(u);n(u).show()}.closure(this))}}