function A3LImgUploaderAvatar(n){var i='<div id="container{{progressBarId}}" style="display:none"><\/div><script>console.log(\'uploader!!\');gx.fx.obs.addObserver("{{observer}}", window, setA3LUploader{{buttonId}});function setA3LUploader{{buttonId}}() {    console.log(\'mode {{mode}}\');    var browse = document.getElementById("{{buttonId}}");\tconsole.log(\'mode {{mode}}\');    var selectDialog = document.createElement("INPUT");    selectDialog.setAttribute("type", "file");    selectDialog.setAttribute("multiple", "true");    selectDialog.style.display = "none";    var progressUpload = document.getElementById(\'container{{progressBarId}}\');    var progress;    addProgressBar();    browse.addEventListener("click", function () {        console.log(\'browse click\');        selectDialog.click();    });    selectDialog.addEventListener("change", function () {        console.log(\'change\');        document.getElementById(\'container{{progressBarId}}\').style.display = \'block\';        sendFiles(selectDialog.files, \'{{{destintation_dir}}}\');        document.getElementById(\'{{id_img}}\').src = URL.createObjectURL(selectDialog.files[0]);        console.log(\'asdf 1 \' + selectDialog.files[0]);        console.log(\'asdf 2 \' + URL.createObjectURL(selectDialog.files[0]));            });    function sendFiles(files, destinationDir) {        console.log(\'sendFiles start!\');\t     console.log(\'sendFiles 1\');        resetProgressBar();\t   console.log(\'sendFiles 2\');        var req = new XMLHttpRequest();\tconsole.log(\'sendFiles 3\');        req.upload.addEventListener("progress", updateProgress);\t   if({{encodeURL}}){\t\tconsole.log("post con encode {{{protocolo}}}://{{ip_server}}:{{ip_port}}/{{{nodeBaseURL}}}/uploadFile/" + encodeURIComponent(destinationDir));        req.open("POST", "{{{protocolo}}}://{{ip_server}}:{{ip_port}}/{{{nodeBaseURL}}}/uploadFile/" + encodeURIComponent(destinationDir));\t   }\t   else{\t\tconsole.log("post sin encode {{{protocolo}}}://{{ip_server}}:{{ip_port}}/{{{nodeBaseURL}}}/uploadFile/" + destinationDir);        req.open("POST", "{{{protocolo}}}://{{ip_server}}:{{ip_port}}/{{{nodeBaseURL}}}/uploadFile/" + destinationDir);\t\t   \t   }   \tconsole.log(\'sendFiles 4\');        req.addEventListener("load", function () {            console.log(\'load event\');            if (req.status >= 200 && req.status < 300) {                var responseData = JSON.parse(req.responseText);                console.log("Respuesta del servidor:", responseData);                gx.dom.byId("{{{photo_dir_id}}}")["value"] = responseData.dir;                gx.dom.byId("{{{photo_name_id}}}")["value"] = responseData.name;            } else {                console.error("Error en la solicitud:", req.status, req.statusText);                alert(req.statusText);            }        });        var form = new FormData();        for (var file = 0; file < files.length; file++) {            form.append("file" + file, files[file], files[file].name);        }        req.send(form);        console.log(\'sendFiles end\');    }    function updateProgress(e) {        console.log(\'updateProgress\');        progress.style.width = ((e.loaded / e.total) * 100) + "%";        if (e.loaded == e.total) {            progress.innerHTML = \'{{text_success}}\';        } else {            progress.innerHTML = ((e.loaded / e.total) * 100) + "%";        }    }    function resetProgressBar() {        console.log(\'resetProgressBar\');        progress.style.width = "0%";        progress.innerHTML = "";    }    function addProgressBar() {        console.log(\'addProgressBar\');        var progressBar = document.createElement("div");                progressBar.id = "{{progressBarId}}";\t   progressBar.className = "{{progressBarClass}}";        progressUpload.appendChild(progressBar);        var innerDIV = document.createElement("div");        progressBar.appendChild(innerDIV);        progress = document.getElementById("{{progressBarId}}");    }}<\/script>',r,t;Mustache.parse(i);this.show=function(){r=n(this.getContainerControl());this.setHtml(Mustache.render(i,this));this.renderChildContainers()};this.Scripts=[];this.autoToggleVisibility=!0;t={};this.renderChildContainers=function(){r.find("[data-slot][data-parent='"+this.ContainerName+"']").each(function(i,r){var e=n(r),f=e.attr("data-slot"),u;u=t[f];u||(u=this.getChildContainer(f),t[f]=u,u.parentNode.removeChild(u));e.append(u);n(u).show()}.closure(this))}}